{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "get_all_timestamps"
      ],
      "properties": {
        "get_all_timestamps": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_all_validator_metrics"
      ],
      "properties": {
        "get_all_validator_metrics": {
          "type": "object",
          "required": [
            "addr"
          ],
          "properties": {
            "addr": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_validator_metrics_btw_timestamps"
      ],
      "properties": {
        "get_validator_metrics_btw_timestamps": {
          "type": "object",
          "required": [
            "addr",
            "timestamp1",
            "timestamp2"
          ],
          "properties": {
            "addr": {
              "$ref": "#/definitions/Addr"
            },
            "timestamp1": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "timestamp2": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_validator_metrics_by_timestamp"
      ],
      "properties": {
        "get_validator_metrics_by_timestamp": {
          "type": "object",
          "required": [
            "addr",
            "timestamp"
          ],
          "properties": {
            "addr": {
              "$ref": "#/definitions/Addr"
            },
            "timestamp": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_validators_metrics_by_timestamp"
      ],
      "properties": {
        "get_validators_metrics_by_timestamp": {
          "type": "object",
          "required": [
            "from",
            "timestamp",
            "to"
          ],
          "properties": {
            "from": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "timestamp": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "to": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_state"
      ],
      "properties": {
        "get_state": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_config"
      ],
      "properties": {
        "get_config": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_all_aprs_by_interval"
      ],
      "properties": {
        "get_all_aprs_by_interval": {
          "type": "object",
          "required": [
            "from",
            "timestamp1",
            "timestamp2",
            "to"
          ],
          "properties": {
            "from": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "timestamp1": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "timestamp2": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "to": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_apr_by_validator"
      ],
      "properties": {
        "get_apr_by_validator": {
          "type": "object",
          "required": [
            "addr",
            "timestamp1",
            "timestamp2"
          ],
          "properties": {
            "addr": {
              "$ref": "#/definitions/Addr"
            },
            "timestamp1": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "timestamp2": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    }
  }
}
